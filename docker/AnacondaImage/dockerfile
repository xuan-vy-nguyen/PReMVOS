# We will use Ubuntu for our image
FROM ubuntu
# Updating Ubuntu packages
RUN apt-get update && yes|apt-get upgrade
# Adding wget and bzip2
RUN apt-get install -y wget bzip2
# # Anaconda installing
# RUN wget https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh
# RUN bash Anaconda3-5.0.1-Linux-x86_64.sh -b
# RUN rm Anaconda3-5.0.1-Linux-x86_64.sh
# # Set path to conda
# ENV PATH /root/anaconda3/bin:$PATH
# # Updating Anaconda packages
# RUN conda update conda
# RUN conda update anaconda
# RUN conda update --all
# install CUDA
RUN wget http://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_418.87.00_linux.run
RUN apt-get update && apt-get install libxml2:i386 libstdc++6:i386
RUN sh cuda_10.1.243_418.87.00_linux.run
# using home which contain packages
RUN cd /home
# installing packages
# + installing tensorpack
RUN git clone https://github.com/ppwwyyxx/tensorpack /root/vision/tensorpack/
RUN cd /root/vision/tensorpack/ && git checkout 6fdde15deac4f23eb31ffef9e8d405d9153a51cd
# + installing cocoapi
RUN git clone https://github.com/cocodataset/cocoapi
RUN cd cocoapi/PythonAPI && make
# + set env path
ENV PYTHONPATH ":/root/vision/tensorpack/:/content/cocoapi/PythonAPI/"
ENV USER ""
# + installing pip packages
RUN pip install termcolor tqdm tabulate opencv-python msgpack_numpy scipy==1.1.0 
# adding folder & using workspace in /app 
ADD . /app
WORKDIR /app